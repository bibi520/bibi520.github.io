<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://bibi520.github.io</id>
    <title>bibi</title>
    <updated>2020-03-11T07:24:47.481Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://bibi520.github.io"/>
    <link rel="self" href="https://bibi520.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://bibi520.github.io/images/avatar.png</logo>
    <icon>https://bibi520.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, bibi</rights>
    <entry>
        <title type="html"><![CDATA[helm搭建istio1.5]]></title>
        <id>https://bibi520.github.io/post/helm-da-jian-istio15/</id>
        <link href="https://bibi520.github.io/post/helm-da-jian-istio15/">
        </link>
        <updated>2020-03-11T03:19:12.000Z</updated>
        <content type="html"><![CDATA[<h4 id="准备好kubernetes和helm搭建过程略过">准备好kubernetes和helm（搭建过程略过）</h4>
<h4 id="1下载istio安装包">1.下载istio安装包</h4>
<p><code>curl -L https://istio.io/downloadIstio | sh -</code></p>
<h4 id="2安装istio所需的要的crd以为这个我开启了自动签发证书所以要把certmanager开启">2.安装istio所需的要的CRD(以为这个我开启了自动签发证书，所以要把certmanager开启)</h4>
<p><code>helm install install/kubernetes/helm/istio-init --name istio-init --namespace istio-system --set certmanager.enabled=true</code></p>
<h4 id="3安装sitio-cni网络插件">3.安装sitio-cni网络插件</h4>
<p><code>helm install install/kubernetes/helm/istio-cni --name istio-cni --namespace kube-system</code></p>
<h4 id="4配置kiali和grafana用户和密码-官方例子">4.配置kiali和grafana用户和密码, <a href="https://istio.io/docs/tasks/observability/kiali/">官方例子</a></h4>
<pre><code class="language-apiVersion:">kind: Secret
metadata:
  name: kiali
  namespace: istio-system
  labels:
    app: kiali
type: Opaque
data:
  username: YWRtaW4=
  passphrase: Y2hhbXBzYTg4OA==
---
apiVersion: v1
kind: Secret
metadata:
  name: grafana
  namespace: istio-system
  labels:
    app: grafana
type: Opaque
data:
  username: YWRtaW4=
  passphrase: Y2hhbXBzYTg4OA==
</code></pre>
<h4 id="5安装过istio这里设置好的参数可以到官网查看含义">5.安装过istio这里设置好的参数可以到<a href="https://istio.io/docs/reference/config/installation-options/">官网</a>查看含义</h4>
<p><code>helm install install/kubernetes/helm/istio --name istio --namespace istio-system --set istio_cni.enabled=true --set global.disablePolicyChecks=false --set global.k8sIngress.enabled=true --set global.k8sIngress.enableHttps=true --set global.k8sIngress.gatewayName=ingressgateway --set security.citadelHealthCheck=true --set gateways.enabled=true --set gateways.istio-egressgateway.enabled=true --set gateways.istio-ingressgateway.enabled=true --set gateways.istio-ingressgateway.sds.enabled=true --set certmanager.enabled=true --set certmanager.email=txy@cztec.com --set grafana.enabled=true --set grafana.security.enabled=true --set grafana.security.usernameKey=username --set kiali.enabled=true --set grafana.security.passphraseKey=passphrase --set tracing.enabled=true --set prometheus.enabled=true</code></p>
<h4 id="6签发范域名证书得先把域名解析到istio-ingressgateway服务的外部地址">6.签发范域名证书(得先把域名解析到istio-ingressgateway服务的外部地址)</h4>
<pre><code>apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
 name: ingress-cert
 namespace: istio-system
spec:
 secretName: ingress-cert
 issuerRef:
   name: letsencrypt
   kind: ClusterIssuer
 commonName: $INGRESS_DOMAIN
 dnsNames:
 - $INGRESS_DOMAIN
 acme:
   config:
   - http01:
       ingressClass: istio
     domains:
     - $INGRESS_DOMAIN
</code></pre>
<h4 id="检查签发成功的证书官方例子">检查签发成功的证书,<a href="https://istio.io/docs/tasks/traffic-management/ingress/ingress-certmgr/#getting-a-let-s-encrypt-certificate-issued-using-cert-manager">官方例子</a></h4>
<p><code>kubectl get certificate</code><br>
<img src="https://bibi520.github.io/post-images/1583908683044.jpg" alt="" loading="lazy"></p>
<h4 id="7网关使用证书">7.网关使用证书</h4>
<pre><code>apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: kiali-gateway
  namespace: istio-system
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 443
      name: https-kiali
      protocol: HTTPS
    tls:
      mode: SIMPLE
      serverCertificate: sds
      privateKey: sds
      credentialName: kiali-ingress-cert
    hosts:
    - &quot;xxx.example.com&quot;
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[docker-compose基础语法]]></title>
        <id>https://bibi520.github.io/post/docker-compose-ji-chu-yu-fa/</id>
        <link href="https://bibi520.github.io/post/docker-compose-ji-chu-yu-fa/">
        </link>
        <updated>2020-03-10T06:29:56.000Z</updated>
        <content type="html"><![CDATA[<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:center">用途</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">version</td>
<td style="text-align:center">指定docker-compose版本号</td>
</tr>
<tr>
<td style="text-align:left">services</td>
<td style="text-align:center">定义容器服务名字</td>
</tr>
<tr>
<td style="text-align:left">image</td>
<td style="text-align:center">指定服务的镜像</td>
</tr>
<tr>
<td style="text-align:left">command</td>
<td style="text-align:center">启动后指定的命令</td>
</tr>
<tr>
<td style="text-align:left">container_name</td>
<td style="text-align:center">定义容器名字</td>
</tr>
<tr>
<td style="text-align:left">depends_on</td>
<td style="text-align:center">解决容器依赖、先后启动问题</td>
</tr>
<tr>
<td style="text-align:left">network</td>
<td style="text-align:center">容器网络定义</td>
</tr>
<tr>
<td style="text-align:left">port</td>
<td style="text-align:center">容器映射的端口</td>
</tr>
<tr>
<td style="text-align:left">volume</td>
<td style="text-align:center">挂载卷</td>
</tr>
<tr>
<td style="text-align:left">labels</td>
<td style="text-align:center">定义标签</td>
</tr>
<tr>
<td style="text-align:left">extra_hosts</td>
<td style="text-align:center">往host文件写入主机名</td>
</tr>
<tr>
<td style="text-align:left">network_mode</td>
<td style="text-align:center">容器网络模式</td>
</tr>
<tr>
<td style="text-align:left">environment</td>
<td style="text-align:center">设置环境变量</td>
</tr>
<tr>
<td style="text-align:left">resources</td>
<td style="text-align:center">资源限制</td>
</tr>
<tr>
<td style="text-align:left">healthcheck</td>
<td style="text-align:center">健康检查机制</td>
</tr>
<tr>
<td style="text-align:left">logging</td>
<td style="text-align:center">配置日志服务</td>
</tr>
</tbody>
</table>
<p>还有很多  这里就不一一列举了 有兴趣的朋友可以去<a href="https://github.com/docker/docker.github.io/blob/master/compose/compose-file/index.md#deploy">github</a>查看</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[certbot签发范域名证书]]></title>
        <id>https://bibi520.github.io/post/certbot-qian-fa-fan-yu-ming-zheng-shu/</id>
        <link href="https://bibi520.github.io/post/certbot-qian-fa-fan-yu-ming-zheng-shu/">
        </link>
        <updated>2020-03-10T03:29:31.000Z</updated>
        <content type="html"><![CDATA[<h5 id="cerbot签发范域名证书中途还要做一次txt解析">cerbot签发范域名证书，中途还要做一次txt解析</h5>
<p><code>certbot certonly --manual --email xxx@qq.com --server https://acme-v02.api.letsencrypt.org/directory --agree-tos -d *.xx.com</code></p>
<h4 id="续签如报一下错误">续签如报一下错误:</h4>
<p>The manual plugin is not working; there may be problems with your existing configuration ......<br>
.....<br>
PluginError('An authentication script must be provided with --manual-auth-hook when using the manual plugin non-interactively.'</p>
<h4 id="解决方式说白了就是重新申请">解决方式（说白了就是重新申请）</h4>
<p><code>certbot certonly -d *.xxx.com --manual --preferred-challenges dns --server https://acme-v02.api.letsencrypt.org/directory</code></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[xpath基础语法]]></title>
        <id>https://bibi520.github.io/post/xpath-ji-chu-yu-fa/</id>
        <link href="https://bibi520.github.io/post/xpath-ji-chu-yu-fa/">
        </link>
        <updated>2020-03-10T03:14:21.000Z</updated>
        <content type="html"><![CDATA[<h4 id="选取节点">选取节点</h4>
<table>
<thead>
<tr>
<th style="text-align:left">表达式</th>
<th style="text-align:center">描述</th>
<th style="text-align:center">实例</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">nodename</td>
<td style="text-align:center">选取所有的nodename节点</td>
<td style="text-align:center">xpath('//div')</td>
</tr>
<tr>
<td style="text-align:left">/</td>
<td style="text-align:center">选取属于根节点的子节点</td>
<td style="text-align:center">xpath('/div')</td>
</tr>
<tr>
<td style="text-align:left">//</td>
<td style="text-align:center">选取当前的所有节点，不考虑位置</td>
<td style="text-align:center">xpath('//div')</td>
</tr>
<tr>
<td style="text-align:left">.</td>
<td style="text-align:center">选取当前节点</td>
<td style="text-align:center">xpath('./div')</td>
</tr>
<tr>
<td style="text-align:left">@</td>
<td style="text-align:center">选取符合属性的节点</td>
<td style="text-align:center">xpath('//@src')</td>
</tr>
<tr>
<td style="text-align:left">*</td>
<td style="text-align:center">选取nodename所有节点</td>
<td style="text-align:center">xpath('/div/*')</td>
</tr>
</tbody>
</table>
<h4 id="选取位置节点">选取位置节点</h4>
<table>
<thead>
<tr>
<th style="text-align:left">实例</th>
<th style="text-align:center">结果</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">xpath('/div/img[1]')</td>
<td style="text-align:center">选取div节点下的第一个img节点</td>
</tr>
<tr>
<td style="text-align:left">xpath('/div/img[last()]')</td>
<td style="text-align:center">选取div节点下最后一个img节点</td>
</tr>
<tr>
<td style="text-align:left">xpath('/div/img[last()-1]')</td>
<td style="text-align:center">选取div节点下的倒数第二个img节点</td>
</tr>
<tr>
<td style="text-align:left">xpath('/div/img[positon() &lt; 3]')</td>
<td style="text-align:center">选取div节点下前两个img节点</td>
</tr>
<tr>
<td style="text-align:left">xpath('/div/img[@class]')</td>
<td style="text-align:center">选取div节点下带有class属性的img节点</td>
</tr>
<tr>
<td style="text-align:left">xpath('/div/img[@class=&quot;txt&quot;]')</td>
<td style="text-align:center">选取div节点下class属性为txt的img节点</td>
</tr>
<tr>
<td style="text-align:left">xpath('//div | //table')</td>
<td style="text-align:center">选取所有的div和table节点</td>
</tr>
</tbody>
</table>
<h4 id="函数功能">函数功能</h4>
<table>
<thead>
<tr>
<th style="text-align:left">函数</th>
<th style="text-align:center">实例</th>
<th style="text-align:center">解释</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">starts-with</td>
<td style="text-align:center">xpath('//div/[starts-with(@id,&quot;img&quot;)]')</td>
<td style="text-align:center">选取id的值以img开头的所有div节点</td>
</tr>
<tr>
<td style="text-align:left">contains</td>
<td style="text-align:center">xpath('//div/[contains(@id,&quot;img&quot;)]')</td>
<td style="text-align:center">选取id的值包含img的所有div节点</td>
</tr>
<tr>
<td style="text-align:left">and</td>
<td style="text-align:center">xpath('//div[contains(@id,&quot;img&quot;) and contains(@id,&quot;src&quot;)]')</td>
<td style="text-align:center">选取id的值包含img和src所有div节点</td>
</tr>
<tr>
<td style="text-align:left">text()</td>
<td style="text-align:center">xpath('//div/[contains(text(),&quot;img&quot;)]')</td>
<td style="text-align:center">选取节点文本包含img的所有div节点</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
</feed>